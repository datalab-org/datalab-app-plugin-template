[build-system]
requires = ["setuptools >= 75", "wheel", "setuptools_scm ~= 8.1"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ package_name }}"
description = "{{ short_description }}"
readme = "README.md"
keywords = []
license = { text = "{{ license }}" }
authors = [{ name = "{{ author_fullname }}", email = "{{ author_email }}" }]
dynamic = ["version"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Science/Research",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Information Technology",
    "Operating System :: OS Independent",
    "Topic :: Other/Nonlisted Topic",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.10"
dependencies = []

[project.urls]
homepage = "https://{{repository_namespace}}.github.io/{{package_name}}/"
repository = "https://github.com/{{repository_namespace}}/{{package_name}}"
documentation = "https://{{repository_namespace}}.github.io/{{package_name}}/"
changelog = "https://github.com/{{repository_namespace}}/{{package_name}}/CHANGELOG.md"

[tool.setuptools.packages.find]
namespaces = true

[tool.setuptools.package-data]
{{package_name}} = ["py.typed"]

[tool.mypy]
ignore_missing_imports = true
follow_imports = "skip"

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "W", "Q"]
ignore = ["E501", "E402"]
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []
per-file-ignores = {}
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.uv]
dev-dependencies = [
    "pytest ~= 8.2",
    "pytest-cov ~= 5.0",
    "pre-commit ~= 4.0",
    "mkdocs ~= 1.6",
    "mkdocs-material ~= 9.5",
    "mkdocstrings[python-legacy] ~= 0.25",
    "mkdocs-awesome-pages-plugin ~= 2.9",
]

[tool.coverage.run]
include = ["src/*"]
parallel = true
branch = true

[tool.coverage.paths]
source = ["src/"]

[tool.coverage.report]
skip_covered = true
show_missing = true
exclude_lines = [
    '^\s*assert False(,|$)',
    'if typing.TYPE_CHECKING:',
    '^\s*@overload( |$)',
]
