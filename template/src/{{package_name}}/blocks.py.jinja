"""An example block that loads a file, generates a fake plot
and stores some data in the database.

TODO for plugin authors:

    1. Replace this class implementation with your own.
    2. Update the entrypoint in pyproject.toml to point to this class.

"""

from pathlib import Path

from pydatalab.blocks.base import DataBlock

from {{package_name}}._version import __version__


class ExampleDataBlock(DataBlock):
    version = __version__
    blocktype: str = "example"
    name: str = "Example Block"
    description: str = "An example block from the plugin template. All of this information should be rewritten by plugin authors."
    accepted_file_extensions = (".txt",)

    @property
    def plot_functions(self):
        return (self.plot_fake_scatter,)

    def plot_fake_scatter(self, filename: str | Path | None = None):
        """Creates a fake scatter plot and stores it in the database, using any provided
        filename or attached data as the plot title.

        Parameters:
            filename: The name of the file to use as the plot title.
                If None, it will attempt to retrieve the file information from the database
                using the `file_id` stored in `self.data`.

        """
        import bokeh.embed
        from bokeh.plotting import figure

        if not filename:
            try:
                from pydatalab.file_utils import get_file_info_by_id
            except ImportError:
                raise RuntimeError(
                    "The `datalab-server[server]` extra must be installed to use this block with a database."
                )

            file_info = get_file_info_by_id(self.data["file_id"], update_if_live=True)
            filename = Path(file_info["location"])

        # prepare some data
        x = [1, 2, 3, 4, 5]
        y = [6, 7, 2, 4, 5]

        # create a new plot with a title and axis labels
        p = figure(title=file_info["name"], x_axis_label="x", y_axis_label="y")

        # add a line renderer with legend and line thickness
        p.line(x, y, legend_label="Temp.", line_width=2)

        self.data["bokeh_plot_data"] = bokeh.embed.json_item(p)
